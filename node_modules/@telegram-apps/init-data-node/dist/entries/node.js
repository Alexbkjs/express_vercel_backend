import { createHmac as createHmac$1 } from "node:crypto";
import { h as hashToken$1, s as sign$1, a as signData$1, v as validate$1 } from "./index-B3St0Z1E.js";
import { i, p } from "./index-B3St0Z1E.js";
const createHmac = (data, key) => {
  return createHmac$1("sha256", key).update(data).digest();
};
function hashToken(token) {
  return hashToken$1(token, createHmac);
}
function sign(data, key, authDate, options) {
  return sign$1(data, key, authDate, signData, options);
}
function signData(data, key, options) {
  return signData$1(data, key, createHmac, options);
}
function validate(value, token, options) {
  return validate$1(value, token, signData, options);
}
export {
  hashToken,
  i as initDataToSearchParams,
  p as parse,
  sign,
  signData,
  validate
};
//# sourceMappingURL=node.js.map
