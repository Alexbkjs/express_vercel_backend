import { InitData, InitDataParsed } from '@telegram-apps/sdk';
import { SharedOptions, SignDataAsyncFn, SignDataSyncFn, Text } from './types.js';

export interface ValidateOptions extends SharedOptions {
    /**
     * Time in seconds which states, how long from creation time init data is considered valid.
     *
     * In other words, in case when authDate + expiresIn is before current time, init data is
     * recognized as expired.
     *
     * In case this value is equal to 0, the function does not check init data expiration.
     * @default 86400 (1 day)
     */
    expiresIn?: number;
}
/**
 * Validates passed init data.
 * @param value - value to check.
 * @param token - bot secret token.
 * @param signData - function signing data.
 * @param options - additional validation options.
 * @throws {TypeError} "auth_date" should present integer
 * @throws {Error} "hash" is empty or not found
 * @throws {Error} "auth_date" is empty or not found
 * @throws {Error} Init data expired
 */
export declare function validate(value: InitData | InitDataParsed | string | URLSearchParams, token: Text, signData: SignDataSyncFn, options?: ValidateOptions): void | never;
/**
 * Validates passed init data.
 * @param value - value to check.
 * @param token - bot secret token.
 * @param signData - function signing data.
 * @param options - additional validation options.
 * @throws {TypeError} "auth_date" should present integer
 * @throws {Error} "hash" is empty or not found
 * @throws {Error} "auth_date" is empty or not found
 * @throws {Error} Init data expired
 */
export declare function validate(value: InitData | InitDataParsed | string | URLSearchParams, token: Text, signData: SignDataAsyncFn, options?: ValidateOptions): Promise<void>;
